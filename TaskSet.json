Columns:
{
  id:         long,
  columnName: String,
  data_type:  String,
  primaryKey: boolean,
  notNull:    boolean,
  datagenSet: int
}

TableDefinition:
{
  id:         long,
  tableName:  String,
  columns:    Columns[],
  extension:  String,
}

Task:
{
  id:                 long,
  taskSet:            long,
  relationsFormatted: String,
  taskText:           String,
  refStatement:       String,
  evalstrategy:       [SET, LIST],
  points:             int,
  requiredterm:       [WITH | AS | SELECT | FROM | JOIN | ON | WHERE | GROUP BY | HAVING | ORDER BY | COUNT | SUM | LEFT OUTER JOIN | RIGHT OUTER JOIN | AVG | MAX | MIN],
  creator:            Profile,
  comments:           Comment[],
  rating              Rating,
  created_at:         Date,
  updated_at:         Date
}

TaskSet:
{ 
  id:                 long,
  tableDefinitions:   TableDefinition[],
  relationsFormatted: String,
  tasks:              Task[],
  creator:            Profile,
  isHomework:         boolean,
  rating:             Rating,
  comments:           Comment[],
  created_at:         Date,
  updated_at:         Date
}

Example:
{
  schema: {
    relation: [
      {
        intension: {
          TableName: "Recipe",
          Columns:  [
            {
              ColumnName: "name"
              Type:       "VARCHAR(100)"
              PrimaryKey: true
              NotNull:    true
              datagenSet: RecepieName
            },
            {
              ColumnName: "complexity"
              Type:       "INTEGER"
              PrimaryKey: false
              NotNull:    false
              datagenSet: numberTo10
            }
          ]
        }
        extension: [
          "INSERT INTO Recipe(name, complexity) VALUES ("Dizzyness", 1);"
        ]
      }
    ]
  }
  tasks: [
    {
      TaskText: "All Recipes Names as 'RecipeName' with an complexity with 3 or higher"
      RefStatemnt: "Select name AS RecipeName FROM Recipe WHERE complexity >= 3"
      evalstrategy: SET ?????
      points: 1
      requiredterm: [
        SELECT,
        AS,
        WHERE
      ]
      isHomework: true 
    }
  ]
}
